docker-build:
  needs: [server-ci, client-ci]
  if: |
    always() && 
    (needs.server-ci.result == 'success' || needs.server-ci.result == 'skipped') &&
    (needs.client-ci.result == 'success' || needs.client-ci.result == 'skipped')
  runs-on: ubuntu-latest
  steps:
    - uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build and run containers with docker-compose
      run: |
        # Spin up the stack for testing
        docker compose -f docker-compose.test.yml up -d --build

    - name: Wait for server healthcheck
      run: |
        echo "Waiting for server to become healthy..."
        for i in {1..10}; do
          STATUS=$(docker inspect --format='{{.State.Health.Status}}' medicare-server || echo "starting")
          echo "Current status: $STATUS"
          if [ "$STATUS" == "healthy" ]; then
            echo "✅ Server is healthy!"
            exit 0
          fi
          sleep 10
        done
        echo "❌ Server did not become healthy in time"
        docker compose -f docker-compose.test.yml logs
        exit 1

    - name: Show server logs
      if: always()
      run: docker compose -f docker-compose.test.yml logs server

    - name: Tear down containers
      if: always()
      run: docker compose -f docker-compose.test.yml down
